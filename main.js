!function(){"use strict";var e=class{constructor(e,t){let{data:s,handleImageClick:n,handleLikeClick:r,handleDeleteCardClick:i}=e;this._name=s.name,this._link=s.link,this._id=s._id,this._isLiked=s.isLiked,this._cardSelector=t,this._handleImageClick=n,this._handleLikeClick=r,this._handleDeleteCardClick=i}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}getId(){return this._id}_setEventListeners(){this._likeButton.addEventListener("click",(()=>{this._handleLikeClick(this)})),this._cardDelete.addEventListener("click",(()=>{this._handleDeleteCardClick(this)})),this._cardImage.addEventListener("click",(()=>{this._handleImageClick(this)}))}_handleLikeButton(){this._isLiked?this._likeButton.classList.add("card__button_active"):this._likeButton.classList.remove("card__button_active")}handleLike(e){this._isLiked=e,this._handleLikeButton()}handleDeleteCard(){this._cardElement.remove(),this._cardElement=null}getView(){return this._cardElement=this._getTemplate(),this._likeButton=this._cardElement.querySelector(".card__button"),this._cardImage=this._cardElement.querySelector(".card__image"),this._cardButton=this._cardElement.querySelector(".card__button"),this._cardDelete=this._cardElement.querySelector(".card__delete_button"),this._cardElement.querySelector(".card__title").textContent=this._name,this._cardImage.src=this._link,this._cardImage.alt=this._name,this._setEventListeners(),this._handleLikeButton(),this._cardElement}},t=class{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t}_showInputError(e){this._errorMessageEl=this._form.querySelector(`#${e.id}-error`),e.classList.add(this._inputErrorClass),this._errorMessageEl.textContent=e.validationMessage,this._errorMessageEl.classList.add(this._errorClass)}_hideInputError(e){this._errorMessageEl=this._form.querySelector(`#${e.id}-error`),e.classList.remove(this._inputErrorClass),this._errorMessageEl.textContent="",this._errorMessageEl.classList.remove(this._errorClass)}_setEventListeners(){this._inputList=Array.from(this._form.querySelectorAll(this._inputSelector)),this._buttonElement=this._form.querySelector(this._submitButtonSelector),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this.toggleButtonState()}))}))}disabledButton(){this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0}enabledButton(){this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1}_hasInvalidInput(){return!this._inputList.every((e=>e.validity.valid))}toggleButtonState(){this._hasInvalidInput()?this.disabledButton():this.enabledButton()}resetValidation(){this._inputList.forEach((e=>{this._hideInputError(e)})),this.toggleButtonState()}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}};class s{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._closeButton=this._popupElement.querySelector(".modal__close"),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._closeButton.addEventListener("click",(()=>{this.close()})),this._popupElement.addEventListener("click",(e=>{e.target===this._popupElement&&this.close()}))}}class n extends s{constructor(e,t){let{popupSelector:s}=e;super({popupSelector:s}),this._handleFormSubmit=t,this._form=this._popupElement.querySelector(".modal__form"),this._inputList=this._form.querySelectorAll(".modal__input"),this._saveButton=this._form.querySelector(".modal__button"),this._saveButtonText=this._saveButton.textContent}setSubmitHandler(e){this._handleFormSubmit=e}_getInputValues(){return this._inputData={},this._inputList.forEach((e=>{this._inputData[e.name]=e.value})),this._inputData}modalSaving(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";this._saveButton.textContent=e?t:this._saveButtonText}setEventListeners(){this._form.addEventListener("submit",(e=>{e.preventDefault();const t=this._getInputValues();this._handleFormSubmit(t),this._form.reset()})),super.setEventListeners()}}const r={inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error"};document.querySelector(".gallery__cards");const i=document.querySelector("#profile-edit-modal"),o=(document.forms["profile-edit-form"],document.querySelector("#add-card-modal"),document.forms["add-card-form"]),a=(document.forms["change-avatar-form"],document.querySelector("#profile-edit-button")),l=document.querySelector(".profile__name-text"),c=document.querySelector(".profile__description"),d=document.querySelector("#profile-add-button"),h=document.querySelector("#avatar-change-button"),u=document.querySelector(".profile__avatar"),_=i.querySelector("#owner-name"),m=i.querySelector("#owner-description"),p="#card-template",v=new class extends s{constructor(e){let{popupSelector:t}=e;super({popupSelector:t}),this._previewImageElement=this._popupElement.querySelector(".modal__preview_image"),this._previewImageElementTitle=this._popupElement.querySelector(".modal__preview_title")}open(e){this._previewImageElement.src=e.link,this._previewImageElement.alt=e.name,this._previewImageElementTitle.textContent=e.name,super.open()}}({popupSelector:"#image-preview-modal"});v.setEventListeners();const E=new n({popupSelector:"#add-card-modal"},(function(e){const t={name:e.title,link:e.url};E.modalSaving(!0),C.addCard(t).then((e=>{L(e),E.close(),o.reset()})).catch((e=>{console.error(e)})).finally((()=>{E.modalSaving(!1)}))}));E.setEventListeners();const S=new n({popupSelector:"#profile-edit-modal"},(function(e){const t=e.name,s=e.description;S.modalSaving(!0),C.updateUserInfo({name:t,description:s}).then((()=>{g.setUserInfo({name:t,description:s}),S.close()})).catch((e=>{console.error(e)})).finally((()=>{S.modalSaving(!1)}))}));S.setEventListeners();const k=new n({popupSelector:"#change-avatar-modal"},(function(e){k.modalSaving(!0),C.changeAvatar(e.link).then((e=>{g.setUserAvatar(e.avatar),k.close()})).catch((e=>{console.error(e)})).finally((()=>{k.modalSaving(!1)}))}));k.setEventListeners();const f=new n({popupSelector:"#confirm-delete-modal"},I);f.setEventListeners();const g=new class{constructor(e,t,s){this._descriptionElement=t,this._nameElement=e,this._avatarElement=s}getUserInfo(){return{name:this._nameElement.textContent,description:this._descriptionElement.textContent}}getUserAvatar(){return{avatar:this._avatarElement.src}}setUserInfo(e){let{name:t,description:s}=e;this._nameElement.textContent=t,this._descriptionElement.textContent=s}setUserAvatar(e){this._avatarElement.src=e}}(l,c,u),C=new class{constructor(e){let{url:t,token:s}=e;this._url=t,this._token=s}checkResponse(e){return e.ok?(console.log("Response OK!"),e.json()):(console.log("Response NOT OK!"),Promise.reject(`Error: ${e.status}`))}getInitialCards(){return fetch(`${this._url}/cards`,{headers:{authorization:this._token,"Content-Type":"application/json"}}).then(this.checkResponse)}getUserInfo(){return fetch(`${this._url}/users/me`,{headers:{authorization:this._token,"Content-Type":"application/json"}}).then(this.checkResponse)}getInfoAndCards(){return Promise.all([this.getUserInfo(),this.getInitialCards()])}updateUserInfo(e){let{name:t,description:s}=e;return fetch(`${this._url}/users/me`,{method:"PATCH",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({name:t,about:s})}).then(this.checkResponse)}addCard(e){let{name:t,link:s}=e;return fetch(`${this._url}/cards`,{method:"POST",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({name:t,link:s})}).then(this.checkResponse)}deleteCard(e){return fetch(`${this._url}/cards/${e}`,{method:"DELETE",headers:{authorization:this._token,"Content-Type":"application/json"}}).then(this.checkResponse)}likeCardStatus(e,t){return fetch(`${this._url}/cards/${e}/likes`,{method:t?"PUT":"DELETE",headers:{authorization:this._token,"Content-Type":"application/json"}}).then(this.checkResponse)}changeAvatar(e){return fetch(`${this._url}/users/me/avatar`,{method:"PATCH",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({avatar:e})}).then(this.checkResponse)}}({url:"https://around-api.en.tripleten-services.com/v1",token:"180fed17-f626-4f59-8309-4b759f5f0038"});C.getInfoAndCards().then((e=>{let[t,s]=e;g.setUserInfo({name:t.name,description:t.about}),g.setUserAvatar(t.avatar),y.renderItems(s)})).catch((e=>{console.error(e)}));const y=new class{constructor(e,t){let{renderer:s}=e;this._items=[],this._renderer=s,this._container=document.querySelector(t)}renderItems(e){this._items=e,this._items.forEach((e=>this._renderer(e)))}addItem(e){this._container.append(e)}}({renderer:e=>{y.addItem(L(e))}},".gallery__cards");function L(t){const s=new e({data:t,handleImageClick:()=>{v.open(t)},handleLikeClick:e=>{C.likeCardStatus(e.getId(),!e._isLiked).then((t=>{e.handleLike(t.isLiked)})).catch(console.error)},handleDeleteCardClick:I},p);return s.getView()}function I(e){f.open(),f.setSubmitHandler((()=>{C.deleteCard(e._id).then((()=>{e.handleDeleteCard(),f.close()})).catch(console.error)}))}a.addEventListener("click",(()=>{const e=g.getUserInfo();_.value=e.name,m.value=e.description,S.open()})),d.addEventListener("click",(()=>{E.open(),b["add-form"].toggleButtonState()})),h.addEventListener("click",(()=>{k.open(),b["avatar-form"].toggleButtonState()}));const b={};[...document.querySelectorAll(".modal__form")].forEach((e=>{const s=new t(r,e),n=e.getAttribute("name");b[n]=s,s.enableValidation()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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N0QsT0FDbEJzSCxFQUFlLGVBQWV4SSxtQkFBbUIsSUFJbkQsTUFBTXdJLEVBQWlCLENBQUMsRUFFUCxJQUFJeEwsU0FBUzRDLGlCQUFpQixpQkFDdENFLFNBQVN2QixJQUNoQixNQUFNa0ssRUFBWSxJQUFJQyxFQUFjcEssRUFBVUMsR0FDeENvSyxFQUFXcEssRUFBWXFLLGFBQWEsUUFFMUNKLEVBQWVHLEdBQVlGLEVBQzNCQSxFQUFVaEksa0JBQWtCLEciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9DYXJkLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvUG9wdXAuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvdXRpbHMvY29uc3RhbnRzLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9wYWdlcy9pbmRleC5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9Vc2VySW5mby5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9BcGkuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvU2VjdGlvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBDYXJkIHtcclxuICBjb25zdHJ1Y3RvcihcclxuICAgIHsgZGF0YSwgaGFuZGxlSW1hZ2VDbGljaywgaGFuZGxlTGlrZUNsaWNrLCBoYW5kbGVEZWxldGVDYXJkQ2xpY2sgfSxcclxuICAgIGNhcmRTZWxlY3RvclxyXG4gICkge1xyXG4gICAgdGhpcy5fbmFtZSA9IGRhdGEubmFtZTtcclxuICAgIHRoaXMuX2xpbmsgPSBkYXRhLmxpbms7XHJcbiAgICB0aGlzLl9pZCA9IGRhdGEuX2lkO1xyXG4gICAgdGhpcy5faXNMaWtlZCA9IGRhdGEuaXNMaWtlZDtcclxuICAgIHRoaXMuX2NhcmRTZWxlY3RvciA9IGNhcmRTZWxlY3RvcjtcclxuICAgIHRoaXMuX2hhbmRsZUltYWdlQ2xpY2sgPSBoYW5kbGVJbWFnZUNsaWNrO1xyXG4gICAgdGhpcy5faGFuZGxlTGlrZUNsaWNrID0gaGFuZGxlTGlrZUNsaWNrO1xyXG4gICAgdGhpcy5faGFuZGxlRGVsZXRlQ2FyZENsaWNrID0gaGFuZGxlRGVsZXRlQ2FyZENsaWNrO1xyXG4gIH1cclxuXHJcbiAgX2dldFRlbXBsYXRlKCkge1xyXG4gICAgcmV0dXJuIGRvY3VtZW50XHJcbiAgICAgIC5xdWVyeVNlbGVjdG9yKHRoaXMuX2NhcmRTZWxlY3RvcilcclxuICAgICAgLmNvbnRlbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkXCIpXHJcbiAgICAgIC5jbG9uZU5vZGUodHJ1ZSk7XHJcbiAgfVxyXG5cclxuICBnZXRJZCgpIHtcclxuICAgIHJldHVybiB0aGlzLl9pZDtcclxuICB9XHJcblxyXG4gIF9zZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIHRoaXMuX2xpa2VCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgICAgdGhpcy5faGFuZGxlTGlrZUNsaWNrKHRoaXMpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgdGhpcy5fY2FyZERlbGV0ZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gICAgICB0aGlzLl9oYW5kbGVEZWxldGVDYXJkQ2xpY2sodGhpcyk7XHJcbiAgICB9KTtcclxuXHJcbiAgICB0aGlzLl9jYXJkSW1hZ2UuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgICAgdGhpcy5faGFuZGxlSW1hZ2VDbGljayh0aGlzKTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgX2hhbmRsZUxpa2VCdXR0b24oKSB7XHJcbiAgICBpZiAodGhpcy5faXNMaWtlZCkge1xyXG4gICAgICB0aGlzLl9saWtlQnV0dG9uLmNsYXNzTGlzdC5hZGQoXCJjYXJkX19idXR0b25fYWN0aXZlXCIpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5fbGlrZUJ1dHRvbi5jbGFzc0xpc3QucmVtb3ZlKFwiY2FyZF9fYnV0dG9uX2FjdGl2ZVwiKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGhhbmRsZUxpa2UoaXNMaWtlZCkge1xyXG4gICAgdGhpcy5faXNMaWtlZCA9IGlzTGlrZWQ7XHJcbiAgICB0aGlzLl9oYW5kbGVMaWtlQnV0dG9uKCk7XHJcbiAgfVxyXG5cclxuICBoYW5kbGVEZWxldGVDYXJkKCkge1xyXG4gICAgdGhpcy5fY2FyZEVsZW1lbnQucmVtb3ZlKCk7XHJcbiAgICB0aGlzLl9jYXJkRWxlbWVudCA9IG51bGw7XHJcbiAgfVxyXG5cclxuICBnZXRWaWV3KCkge1xyXG4gICAgdGhpcy5fY2FyZEVsZW1lbnQgPSB0aGlzLl9nZXRUZW1wbGF0ZSgpO1xyXG4gICAgdGhpcy5fbGlrZUJ1dHRvbiA9IHRoaXMuX2NhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9fYnV0dG9uXCIpO1xyXG4gICAgdGhpcy5fY2FyZEltYWdlID0gdGhpcy5fY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19pbWFnZVwiKTtcclxuICAgIHRoaXMuX2NhcmRCdXR0b24gPSB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2J1dHRvblwiKTtcclxuICAgIHRoaXMuX2NhcmREZWxldGUgPSB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2RlbGV0ZV9idXR0b25cIik7XHJcblxyXG4gICAgdGhpcy5fY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX190aXRsZVwiKS50ZXh0Q29udGVudCA9IHRoaXMuX25hbWU7XHJcbiAgICB0aGlzLl9jYXJkSW1hZ2Uuc3JjID0gdGhpcy5fbGluaztcclxuICAgIHRoaXMuX2NhcmRJbWFnZS5hbHQgPSB0aGlzLl9uYW1lO1xyXG5cclxuICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgICB0aGlzLl9oYW5kbGVMaWtlQnV0dG9uKCk7XHJcblxyXG4gICAgcmV0dXJuIHRoaXMuX2NhcmRFbGVtZW50O1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgQ2FyZDtcclxuIiwiY2xhc3MgRm9ybVZhbGlkYXRvciB7XHJcbiAgY29uc3RydWN0b3Ioc2V0dGluZ3MsIGZvcm1FbGVtZW50KSB7XHJcbiAgICB0aGlzLl9pbnB1dFNlbGVjdG9yID0gc2V0dGluZ3MuaW5wdXRTZWxlY3RvcjtcclxuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvblNlbGVjdG9yID0gc2V0dGluZ3Muc3VibWl0QnV0dG9uU2VsZWN0b3I7XHJcbiAgICB0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzID0gc2V0dGluZ3MuaW5hY3RpdmVCdXR0b25DbGFzcztcclxuICAgIHRoaXMuX2lucHV0RXJyb3JDbGFzcyA9IHNldHRpbmdzLmlucHV0RXJyb3JDbGFzcztcclxuICAgIHRoaXMuX2Vycm9yQ2xhc3MgPSBzZXR0aW5ncy5lcnJvckNsYXNzO1xyXG4gICAgdGhpcy5fZm9ybSA9IGZvcm1FbGVtZW50O1xyXG4gIH1cclxuXHJcbiAgX3Nob3dJbnB1dEVycm9yKGlucHV0RWwpIHtcclxuICAgIHRoaXMuX2Vycm9yTWVzc2FnZUVsID0gdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yKGAjJHtpbnB1dEVsLmlkfS1lcnJvcmApO1xyXG4gICAgaW5wdXRFbC5jbGFzc0xpc3QuYWRkKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XHJcbiAgICB0aGlzLl9lcnJvck1lc3NhZ2VFbC50ZXh0Q29udGVudCA9IGlucHV0RWwudmFsaWRhdGlvbk1lc3NhZ2U7XHJcbiAgICB0aGlzLl9lcnJvck1lc3NhZ2VFbC5jbGFzc0xpc3QuYWRkKHRoaXMuX2Vycm9yQ2xhc3MpO1xyXG4gIH1cclxuXHJcbiAgX2hpZGVJbnB1dEVycm9yKGlucHV0RWwpIHtcclxuICAgIHRoaXMuX2Vycm9yTWVzc2FnZUVsID0gdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yKGAjJHtpbnB1dEVsLmlkfS1lcnJvcmApO1xyXG4gICAgaW5wdXRFbC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XHJcbiAgICB0aGlzLl9lcnJvck1lc3NhZ2VFbC50ZXh0Q29udGVudCA9IFwiXCI7XHJcbiAgICB0aGlzLl9lcnJvck1lc3NhZ2VFbC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2Vycm9yQ2xhc3MpO1xyXG4gIH1cclxuXHJcbiAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgdGhpcy5faW5wdXRMaXN0ID0gQXJyYXkuZnJvbShcclxuICAgICAgdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yQWxsKHRoaXMuX2lucHV0U2VsZWN0b3IpXHJcbiAgICApO1xyXG4gICAgdGhpcy5fYnV0dG9uRWxlbWVudCA9IHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3Rvcih0aGlzLl9zdWJtaXRCdXR0b25TZWxlY3Rvcik7XHJcblxyXG4gICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0RWwpID0+IHtcclxuICAgICAgaW5wdXRFbC5hZGRFdmVudExpc3RlbmVyKFwiaW5wdXRcIiwgKCkgPT4ge1xyXG4gICAgICAgIHRoaXMuX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dEVsKTtcclxuICAgICAgICB0aGlzLnRvZ2dsZUJ1dHRvblN0YXRlKCk7XHJcbiAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBkaXNhYmxlZEJ1dHRvbigpIHtcclxuICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcclxuICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQuZGlzYWJsZWQgPSB0cnVlO1xyXG4gIH1cclxuXHJcbiAgZW5hYmxlZEJ1dHRvbigpIHtcclxuICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcclxuICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQuZGlzYWJsZWQgPSBmYWxzZTtcclxuICB9XHJcblxyXG4gIF9oYXNJbnZhbGlkSW5wdXQoKSB7XHJcbiAgICByZXR1cm4gIXRoaXMuX2lucHV0TGlzdC5ldmVyeSgoaW5wdXRFbCkgPT4gaW5wdXRFbC52YWxpZGl0eS52YWxpZCk7XHJcbiAgfVxyXG5cclxuICB0b2dnbGVCdXR0b25TdGF0ZSgpIHtcclxuICAgIGlmICh0aGlzLl9oYXNJbnZhbGlkSW5wdXQoKSkge1xyXG4gICAgICB0aGlzLmRpc2FibGVkQnV0dG9uKCk7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIHRoaXMuZW5hYmxlZEJ1dHRvbigpO1xyXG4gIH1cclxuXHJcbiAgcmVzZXRWYWxpZGF0aW9uKCkge1xyXG4gICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0RWwpID0+IHtcclxuICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRFbCk7XHJcbiAgICB9KTtcclxuICAgIHRoaXMudG9nZ2xlQnV0dG9uU3RhdGUoKTtcclxuICB9XHJcblxyXG4gIF9jaGVja0lucHV0VmFsaWRpdHkoaW5wdXRFbCkge1xyXG4gICAgaWYgKCFpbnB1dEVsLnZhbGlkaXR5LnZhbGlkKSB7XHJcbiAgICAgIHRoaXMuX3Nob3dJbnB1dEVycm9yKGlucHV0RWwpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRFbCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBlbmFibGVWYWxpZGF0aW9uKCkge1xyXG4gICAgdGhpcy5fZm9ybS5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChldnQpID0+IHtcclxuICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICB9KTtcclxuXHJcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgRm9ybVZhbGlkYXRvcjtcclxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXAge1xyXG4gIGNvbnN0cnVjdG9yKHsgcG9wdXBTZWxlY3RvciB9KSB7XHJcbiAgICB0aGlzLl9wb3B1cEVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHBvcHVwU2VsZWN0b3IpO1xyXG4gICAgdGhpcy5fY2xvc2VCdXR0b24gPSB0aGlzLl9wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fY2xvc2VcIik7XHJcbiAgICB0aGlzLl9oYW5kbGVFc2NDbG9zZSA9IHRoaXMuX2hhbmRsZUVzY0Nsb3NlLmJpbmQodGhpcyk7XHJcbiAgfVxyXG5cclxuICBvcGVuKCkge1xyXG4gICAgdGhpcy5fcG9wdXBFbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJtb2RhbF9vcGVuZWRcIik7XHJcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XHJcbiAgfVxyXG5cclxuICBjbG9zZSgpIHtcclxuICAgIHRoaXMuX3BvcHVwRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKFwibW9kYWxfb3BlbmVkXCIpO1xyXG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xyXG4gIH1cclxuXHJcbiAgX2hhbmRsZUVzY0Nsb3NlKGV2dCkge1xyXG4gICAgaWYgKGV2dC5rZXkgPT09IFwiRXNjYXBlXCIpIHtcclxuICAgICAgdGhpcy5jbG9zZSgpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICB0aGlzLl9jbG9zZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gICAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICB9KTtcclxuXHJcbiAgICB0aGlzLl9wb3B1cEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChldnQpID0+IHtcclxuICAgICAgaWYgKGV2dC50YXJnZXQgPT09IHRoaXMuX3BvcHVwRWxlbWVudCkge1xyXG4gICAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoRm9ybSBleHRlbmRzIFBvcHVwIHtcclxuICBjb25zdHJ1Y3Rvcih7IHBvcHVwU2VsZWN0b3IgfSwgaGFuZGxlRm9ybVN1Ym1pdCkge1xyXG4gICAgc3VwZXIoeyBwb3B1cFNlbGVjdG9yIH0pO1xyXG4gICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCA9IGhhbmRsZUZvcm1TdWJtaXQ7XHJcbiAgICB0aGlzLl9mb3JtID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2Zvcm1cIik7XHJcbiAgICB0aGlzLl9pbnB1dExpc3QgPSB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3JBbGwoXCIubW9kYWxfX2lucHV0XCIpO1xyXG4gICAgdGhpcy5fc2F2ZUJ1dHRvbiA9IHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fYnV0dG9uXCIpO1xyXG4gICAgdGhpcy5fc2F2ZUJ1dHRvblRleHQgPSB0aGlzLl9zYXZlQnV0dG9uLnRleHRDb250ZW50O1xyXG4gIH1cclxuXHJcbiAgc2V0U3VibWl0SGFuZGxlcihoYW5kbGVGb3JtU3VibWl0KSB7XHJcbiAgICB0aGlzLl9oYW5kbGVGb3JtU3VibWl0ID0gaGFuZGxlRm9ybVN1Ym1pdDtcclxuICB9XHJcblxyXG4gIF9nZXRJbnB1dFZhbHVlcygpIHtcclxuICAgIHRoaXMuX2lucHV0RGF0YSA9IHt9O1xyXG4gICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0KSA9PiB7XHJcbiAgICAgIHRoaXMuX2lucHV0RGF0YVtpbnB1dC5uYW1lXSA9IGlucHV0LnZhbHVlO1xyXG4gICAgfSk7XHJcbiAgICByZXR1cm4gdGhpcy5faW5wdXREYXRhO1xyXG4gIH1cclxuXHJcbiAgbW9kYWxTYXZpbmcoaXNTYXZpbmcsIHNhdmVUZXh0ID0gXCJTYXZpbmcuLi5cIikge1xyXG4gICAgaWYgKGlzU2F2aW5nKSB7XHJcbiAgICAgIHRoaXMuX3NhdmVCdXR0b24udGV4dENvbnRlbnQgPSBzYXZlVGV4dDtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuX3NhdmVCdXR0b24udGV4dENvbnRlbnQgPSB0aGlzLl9zYXZlQnV0dG9uVGV4dDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgdGhpcy5fZm9ybS5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChldnQpID0+IHtcclxuICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgIGNvbnN0IGZvcm1WYWx1ZXMgPSB0aGlzLl9nZXRJbnB1dFZhbHVlcygpO1xyXG4gICAgICB0aGlzLl9oYW5kbGVGb3JtU3VibWl0KGZvcm1WYWx1ZXMpO1xyXG4gICAgICB0aGlzLl9mb3JtLnJlc2V0KCk7XHJcbiAgICB9KTtcclxuICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgfVxyXG59XHJcbiIsImV4cG9ydCBjb25zdCBpbml0aWFsQ2FyZHMgPSBbXHJcbiAge1xyXG4gICAgbmFtZTogXCJZb3NlbWl0ZSBWYWxsZXlcIixcclxuICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC95b3NlbWl0ZS5qcGdcIixcclxuICB9LFxyXG4gIHtcclxuICAgIG5hbWU6IFwiTGFrZSBMb3Vpc2VcIixcclxuICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC9sYWtlLWxvdWlzZS5qcGdcIixcclxuICB9LFxyXG4gIHtcclxuICAgIG5hbWU6IFwiQmFsZCBNb3VudGFpbnNcIixcclxuICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC9iYWxkLW1vdW50YWlucy5qcGdcIixcclxuICB9LFxyXG4gIHtcclxuICAgIG5hbWU6IFwiTGF0ZW1hclwiLFxyXG4gICAgbGluazogXCJodHRwczovL3ByYWN0aWN1bS1jb250ZW50LnMzLnVzLXdlc3QtMS5hbWF6b25hd3MuY29tL3NvZnR3YXJlLWVuZ2luZWVyL2Fyb3VuZC1wcm9qZWN0L2xhdGVtYXIuanBnXCIsXHJcbiAgfSxcclxuICB7XHJcbiAgICBuYW1lOiBcIlZhbm9pc2UgTmF0aW9uYWwgUGFya1wiLFxyXG4gICAgbGluazogXCJodHRwczovL3ByYWN0aWN1bS1jb250ZW50LnMzLnVzLXdlc3QtMS5hbWF6b25hd3MuY29tL3NvZnR3YXJlLWVuZ2luZWVyL2Fyb3VuZC1wcm9qZWN0L3Zhbm9pc2UuanBnXCIsXHJcbiAgfSxcclxuICB7XHJcbiAgICBuYW1lOiBcIkxhZ28gZGkgQnJhaWVzXCIsXHJcbiAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QvbGFnby5qcGdcIixcclxuICB9LFxyXG5dO1xyXG5cclxuZXhwb3J0IGNvbnN0IHNldHRpbmdzID0ge1xyXG4gIGlucHV0U2VsZWN0b3I6IFwiLm1vZGFsX19pbnB1dFwiLFxyXG4gIHN1Ym1pdEJ1dHRvblNlbGVjdG9yOiBcIi5tb2RhbF9fYnV0dG9uXCIsXHJcbiAgaW5hY3RpdmVCdXR0b25DbGFzczogXCJtb2RhbF9fYnV0dG9uX2Rpc2FibGVkXCIsXHJcbiAgaW5wdXRFcnJvckNsYXNzOiBcIm1vZGFsX19pbnB1dF90eXBlX2Vycm9yXCIsXHJcbiAgZXJyb3JDbGFzczogXCJtb2RhbF9fZXJyb3JcIixcclxufTtcclxuIiwiaW1wb3J0IENhcmQgZnJvbSBcIi4uL2NvbXBvbmVudHMvQ2FyZC5qc1wiO1xyXG5pbXBvcnQgRm9ybVZhbGlkYXRvciBmcm9tIFwiLi4vY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzXCI7XHJcbmltcG9ydCBTZWN0aW9uIGZyb20gXCIuLi9jb21wb25lbnRzL1NlY3Rpb24uanNcIjtcclxuaW1wb3J0IFBvcHVwV2l0aEZvcm0gZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qc1wiO1xyXG5pbXBvcnQgUG9wdXBXaXRoSW1hZ2UgZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanNcIjtcclxuaW1wb3J0IFVzZXJJbmZvIGZyb20gXCIuLi9jb21wb25lbnRzL1VzZXJJbmZvLmpzXCI7XHJcbmltcG9ydCBcIi4vaW5kZXguY3NzXCI7XHJcbmltcG9ydCB7IGluaXRpYWxDYXJkcywgc2V0dGluZ3MgfSBmcm9tIFwiLi4vdXRpbHMvY29uc3RhbnRzLmpzXCI7XHJcbmltcG9ydCBBcGkgZnJvbSBcIi4uL2NvbXBvbmVudHMvQXBpLmpzXCI7XHJcblxyXG4vKiBXcmFwcGVycyovXHJcbmNvbnN0IGNhcmRMaXN0RWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmdhbGxlcnlfX2NhcmRzXCIpO1xyXG5jb25zdCBwcm9maWxlRWRpdE1vZGFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwcm9maWxlLWVkaXQtbW9kYWxcIik7XHJcbmNvbnN0IHByb2ZpbGVFZGl0Rm9ybSA9IGRvY3VtZW50LmZvcm1zW1wicHJvZmlsZS1lZGl0LWZvcm1cIl07XHJcbmNvbnN0IGFkZENhcmRNb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjYWRkLWNhcmQtbW9kYWxcIik7XHJcbmNvbnN0IGFkZENhcmRGb3JtID0gZG9jdW1lbnQuZm9ybXNbXCJhZGQtY2FyZC1mb3JtXCJdO1xyXG5jb25zdCBjaGFuZ2VBdmF0YXJGb3JtID0gZG9jdW1lbnQuZm9ybXNbXCJjaGFuZ2UtYXZhdGFyLWZvcm1cIl07XHJcblxyXG4vKiBCdXR0b25zICYgb3RoZXIgRE9NIG5vZGVzICovXHJcbmNvbnN0IHByb2ZpbGVFZGl0QnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwcm9maWxlLWVkaXQtYnV0dG9uXCIpO1xyXG5jb25zdCBwcm9maWxlTmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fbmFtZS10ZXh0XCIpO1xyXG5jb25zdCBwcm9maWxlRGVzY3JpcHRpb24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2Rlc2NyaXB0aW9uXCIpO1xyXG5jb25zdCBhZGROZXdDYXJkQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwcm9maWxlLWFkZC1idXR0b25cIik7XHJcbmNvbnN0IGF2YXRhckNoYW5nZUJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjYXZhdGFyLWNoYW5nZS1idXR0b25cIik7XHJcbmNvbnN0IGF2YXRhckltYWdlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19hdmF0YXJcIik7XHJcblxyXG4vKiBGb3JtIGRhdGEgKi9cclxuY29uc3QgcHJvZmlsZU5hbWVJbnB1dCA9IHByb2ZpbGVFZGl0TW9kYWwucXVlcnlTZWxlY3RvcihcIiNvd25lci1uYW1lXCIpO1xyXG5jb25zdCBwcm9maWxlRGVzY3JpcHRpb25JbnB1dCA9XHJcbiAgcHJvZmlsZUVkaXRNb2RhbC5xdWVyeVNlbGVjdG9yKFwiI293bmVyLWRlc2NyaXB0aW9uXCIpO1xyXG5cclxuY29uc3QgY2FyZFNlbGVjdG9ycyA9IHtcclxuICBjYXJkVGVtcGxhdGU6IFwiI2NhcmQtdGVtcGxhdGVcIixcclxufTtcclxuXHJcbi8qIEZ1bmN0aW9ucyAqL1xyXG5cclxuY29uc3QgcG9wdXBXaXRoSW1hZ2UgPSBuZXcgUG9wdXBXaXRoSW1hZ2Uoe1xyXG4gIHBvcHVwU2VsZWN0b3I6IFwiI2ltYWdlLXByZXZpZXctbW9kYWxcIixcclxufSk7XHJcbnBvcHVwV2l0aEltYWdlLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG5jb25zdCBuZXdDYXJkUG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybShcclxuICB7XHJcbiAgICBwb3B1cFNlbGVjdG9yOiBcIiNhZGQtY2FyZC1tb2RhbFwiLFxyXG4gIH0sXHJcbiAgaGFuZGxlQWRkQ2FyZFN1Ym1pdFxyXG4pO1xyXG5uZXdDYXJkUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbmNvbnN0IGVkaXRQcm9maWxlUG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybShcclxuICB7XHJcbiAgICBwb3B1cFNlbGVjdG9yOiBcIiNwcm9maWxlLWVkaXQtbW9kYWxcIixcclxuICB9LFxyXG4gIGhhbmRsZVByb2ZpbGVFZGl0U3VibWl0XHJcbik7XHJcbmVkaXRQcm9maWxlUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbmNvbnN0IGF2YXRhckNoYW5nZVBvcHVwID0gbmV3IFBvcHVwV2l0aEZvcm0oXHJcbiAge1xyXG4gICAgcG9wdXBTZWxlY3RvcjogXCIjY2hhbmdlLWF2YXRhci1tb2RhbFwiLFxyXG4gIH0sXHJcbiAgaGFuZGxlQ2hhbmdlQXZhdGFyU3VibWl0XHJcbik7XHJcbmF2YXRhckNoYW5nZVBvcHVwLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG5jb25zdCBjb25maXJtRGVsZXRlUG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybShcclxuICB7XHJcbiAgICBwb3B1cFNlbGVjdG9yOiBcIiNjb25maXJtLWRlbGV0ZS1tb2RhbFwiLFxyXG4gIH0sXHJcbiAgaGFuZGxlRGVsZXRlQ2FyZFN1Ym1pdFxyXG4pO1xyXG5jb25maXJtRGVsZXRlUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbmNvbnN0IHVzZXJJbmZvID0gbmV3IFVzZXJJbmZvKHByb2ZpbGVOYW1lLCBwcm9maWxlRGVzY3JpcHRpb24sIGF2YXRhckltYWdlKTtcclxuXHJcbmNvbnN0IGFwaSA9IG5ldyBBcGkoe1xyXG4gIHVybDogXCJodHRwczovL2Fyb3VuZC1hcGkuZW4udHJpcGxldGVuLXNlcnZpY2VzLmNvbS92MVwiLFxyXG4gIHRva2VuOiBcIjE4MGZlZDE3LWY2MjYtNGY1OS04MzA5LTRiNzU5ZjVmMDAzOFwiLFxyXG59KTtcclxuXHJcbmFwaVxyXG4gIC5nZXRJbmZvQW5kQ2FyZHMoKVxyXG4gIC50aGVuKChbdXNlckRhdGEsIGNhcmRzXSkgPT4ge1xyXG4gICAgdXNlckluZm8uc2V0VXNlckluZm8oeyBuYW1lOiB1c2VyRGF0YS5uYW1lLCBkZXNjcmlwdGlvbjogdXNlckRhdGEuYWJvdXQgfSk7IC8vcmVuZGVyIHByb2ZpbGUgaW5mb1xyXG4gICAgdXNlckluZm8uc2V0VXNlckF2YXRhcih1c2VyRGF0YS5hdmF0YXIpOyAvL3JlbmRlciBwcm9maWxlIHBpY1xyXG4gICAgY2FyZFNlY3Rpb24ucmVuZGVySXRlbXMoY2FyZHMpO1xyXG4gIH0pXHJcbiAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcclxuICB9KTtcclxuXHJcbmNvbnN0IGNhcmRTZWN0aW9uID0gbmV3IFNlY3Rpb24oXHJcbiAge1xyXG4gICAgcmVuZGVyZXI6IChkYXRhKSA9PiB7XHJcbiAgICAgIGNhcmRTZWN0aW9uLmFkZEl0ZW0ocmVuZGVyQ2FyZChkYXRhKSk7XHJcbiAgICB9LFxyXG4gIH0sXHJcbiAgXCIuZ2FsbGVyeV9fY2FyZHNcIlxyXG4pO1xyXG5cclxuLyogRXZlbnQgSGFuZGxlcnMgKi9cclxuXHJcbmZ1bmN0aW9uIHJlbmRlckNhcmQoZGF0YSkge1xyXG4gIGNvbnN0IGNhcmQgPSBuZXcgQ2FyZChcclxuICAgIHtcclxuICAgICAgZGF0YSxcclxuICAgICAgaGFuZGxlSW1hZ2VDbGljazogKCkgPT4ge1xyXG4gICAgICAgIHBvcHVwV2l0aEltYWdlLm9wZW4oZGF0YSk7XHJcbiAgICAgIH0sXHJcbiAgICAgIGhhbmRsZUxpa2VDbGljazogKGNhcmQpID0+IHtcclxuICAgICAgICBhcGlcclxuICAgICAgICAgIC5saWtlQ2FyZFN0YXR1cyhjYXJkLmdldElkKCksICFjYXJkLl9pc0xpa2VkKVxyXG4gICAgICAgICAgLnRoZW4oKGRhdGEpID0+IHtcclxuICAgICAgICAgICAgY2FyZC5oYW5kbGVMaWtlKGRhdGEuaXNMaWtlZCk7XHJcbiAgICAgICAgICB9KVxyXG4gICAgICAgICAgLmNhdGNoKGNvbnNvbGUuZXJyb3IpO1xyXG4gICAgICB9LFxyXG4gICAgICBoYW5kbGVEZWxldGVDYXJkQ2xpY2s6IGhhbmRsZURlbGV0ZUNhcmRTdWJtaXQsXHJcbiAgICB9LFxyXG4gICAgY2FyZFNlbGVjdG9ycy5jYXJkVGVtcGxhdGVcclxuICApO1xyXG4gIHJldHVybiBjYXJkLmdldFZpZXcoKTtcclxufVxyXG5cclxuZnVuY3Rpb24gaGFuZGxlUHJvZmlsZUVkaXRTdWJtaXQodXNlckRhdGEpIHtcclxuICBjb25zdCBuYW1lID0gdXNlckRhdGEubmFtZTtcclxuICBjb25zdCBkZXNjcmlwdGlvbiA9IHVzZXJEYXRhLmRlc2NyaXB0aW9uO1xyXG4gIGVkaXRQcm9maWxlUG9wdXAubW9kYWxTYXZpbmcodHJ1ZSk7XHJcblxyXG4gIGFwaVxyXG4gICAgLnVwZGF0ZVVzZXJJbmZvKHsgbmFtZTogbmFtZSwgZGVzY3JpcHRpb246IGRlc2NyaXB0aW9uIH0pXHJcbiAgICAudGhlbigoKSA9PiB7XHJcbiAgICAgIHVzZXJJbmZvLnNldFVzZXJJbmZvKHsgbmFtZTogbmFtZSwgZGVzY3JpcHRpb246IGRlc2NyaXB0aW9uIH0pO1xyXG4gICAgICBlZGl0UHJvZmlsZVBvcHVwLmNsb3NlKCk7XHJcbiAgICB9KVxyXG4gICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgY29uc29sZS5lcnJvcihlcnIpO1xyXG4gICAgfSlcclxuICAgIC5maW5hbGx5KCgpID0+IHtcclxuICAgICAgZWRpdFByb2ZpbGVQb3B1cC5tb2RhbFNhdmluZyhmYWxzZSk7XHJcbiAgICB9KTtcclxufVxyXG5cclxuZnVuY3Rpb24gaGFuZGxlQWRkQ2FyZFN1Ym1pdChpbnB1dERhdGEpIHtcclxuICBjb25zdCBjYXJkRGF0YSA9IHsgbmFtZTogaW5wdXREYXRhLnRpdGxlLCBsaW5rOiBpbnB1dERhdGEudXJsIH07XHJcbiAgbmV3Q2FyZFBvcHVwLm1vZGFsU2F2aW5nKHRydWUpO1xyXG5cclxuICBhcGlcclxuICAgIC5hZGRDYXJkKGNhcmREYXRhKVxyXG4gICAgLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgICByZW5kZXJDYXJkKHJlcyk7XHJcbiAgICAgIG5ld0NhcmRQb3B1cC5jbG9zZSgpO1xyXG4gICAgICBhZGRDYXJkRm9ybS5yZXNldCgpO1xyXG4gICAgfSlcclxuICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcclxuICAgIH0pXHJcbiAgICAuZmluYWxseSgoKSA9PiB7XHJcbiAgICAgIG5ld0NhcmRQb3B1cC5tb2RhbFNhdmluZyhmYWxzZSk7XHJcbiAgICB9KTtcclxufVxyXG5cclxuZnVuY3Rpb24gaGFuZGxlQ2hhbmdlQXZhdGFyU3VibWl0KGF2YXRhclVybCkge1xyXG4gIGF2YXRhckNoYW5nZVBvcHVwLm1vZGFsU2F2aW5nKHRydWUpO1xyXG5cclxuICBhcGlcclxuICAgIC5jaGFuZ2VBdmF0YXIoYXZhdGFyVXJsLmxpbmspXHJcbiAgICAudGhlbigodXNlckRhdGEpID0+IHtcclxuICAgICAgdXNlckluZm8uc2V0VXNlckF2YXRhcih1c2VyRGF0YS5hdmF0YXIpO1xyXG4gICAgICBhdmF0YXJDaGFuZ2VQb3B1cC5jbG9zZSgpO1xyXG4gICAgfSlcclxuICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcclxuICAgIH0pXHJcbiAgICAuZmluYWxseSgoKSA9PiB7XHJcbiAgICAgIGF2YXRhckNoYW5nZVBvcHVwLm1vZGFsU2F2aW5nKGZhbHNlKTtcclxuICAgIH0pO1xyXG59XHJcblxyXG5mdW5jdGlvbiBoYW5kbGVEZWxldGVDYXJkU3VibWl0KGNhcmREYXRhKSB7XHJcbiAgY29uZmlybURlbGV0ZVBvcHVwLm9wZW4oKTtcclxuXHJcbiAgY29uZmlybURlbGV0ZVBvcHVwLnNldFN1Ym1pdEhhbmRsZXIoKCkgPT4ge1xyXG4gICAgYXBpXHJcbiAgICAgIC5kZWxldGVDYXJkKGNhcmREYXRhLl9pZClcclxuICAgICAgLnRoZW4oKCkgPT4ge1xyXG4gICAgICAgIGNhcmREYXRhLmhhbmRsZURlbGV0ZUNhcmQoKTtcclxuICAgICAgICBjb25maXJtRGVsZXRlUG9wdXAuY2xvc2UoKTtcclxuICAgICAgfSlcclxuICAgICAgLmNhdGNoKGNvbnNvbGUuZXJyb3IpO1xyXG4gIH0pO1xyXG59XHJcblxyXG5mdW5jdGlvbiBoYW5kbGVJbWFnZUNsaWNrKGNhcmREYXRhKSB7XHJcbiAgcG9wdXBXaXRoSW1hZ2Uub3BlbihjYXJkRGF0YSk7XHJcbn1cclxuXHJcbi8vIEZvcm0gTGlzdGVuZXJzXHJcbnByb2ZpbGVFZGl0QnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgY29uc3QgdXNlckRhdGEgPSB1c2VySW5mby5nZXRVc2VySW5mbygpO1xyXG4gIHByb2ZpbGVOYW1lSW5wdXQudmFsdWUgPSB1c2VyRGF0YS5uYW1lO1xyXG4gIHByb2ZpbGVEZXNjcmlwdGlvbklucHV0LnZhbHVlID0gdXNlckRhdGEuZGVzY3JpcHRpb247XHJcbiAgZWRpdFByb2ZpbGVQb3B1cC5vcGVuKCk7XHJcbn0pO1xyXG5cclxuYWRkTmV3Q2FyZEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gIG5ld0NhcmRQb3B1cC5vcGVuKCk7XHJcbiAgZm9ybVZhbGlkYXRvcnNbXCJhZGQtZm9ybVwiXS50b2dnbGVCdXR0b25TdGF0ZSgpO1xyXG59KTtcclxuXHJcbmF2YXRhckNoYW5nZUJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gIGF2YXRhckNoYW5nZVBvcHVwLm9wZW4oKTtcclxuICBmb3JtVmFsaWRhdG9yc1tcImF2YXRhci1mb3JtXCJdLnRvZ2dsZUJ1dHRvblN0YXRlKCk7XHJcbn0pO1xyXG5cclxuLyogVmFsaWRhdGlvbiAqL1xyXG5jb25zdCBmb3JtVmFsaWRhdG9ycyA9IHt9O1xyXG5cclxuY29uc3QgZm9ybUxpc3QgPSBbLi4uZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5tb2RhbF9fZm9ybVwiKV07XHJcbmZvcm1MaXN0LmZvckVhY2goKGZvcm1FbGVtZW50KSA9PiB7XHJcbiAgY29uc3QgdmFsaWRhdG9yID0gbmV3IEZvcm1WYWxpZGF0b3Ioc2V0dGluZ3MsIGZvcm1FbGVtZW50KTtcclxuICBjb25zdCBmb3JtTmFtZSA9IGZvcm1FbGVtZW50LmdldEF0dHJpYnV0ZShcIm5hbWVcIik7XHJcblxyXG4gIGZvcm1WYWxpZGF0b3JzW2Zvcm1OYW1lXSA9IHZhbGlkYXRvcjtcclxuICB2YWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpO1xyXG59KTtcclxuIiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhJbWFnZSBleHRlbmRzIFBvcHVwIHtcclxuICBjb25zdHJ1Y3Rvcih7IHBvcHVwU2VsZWN0b3IgfSkge1xyXG4gICAgc3VwZXIoeyBwb3B1cFNlbGVjdG9yIH0pO1xyXG4gICAgdGhpcy5fcHJldmlld0ltYWdlRWxlbWVudCA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgICBcIi5tb2RhbF9fcHJldmlld19pbWFnZVwiXHJcbiAgICApO1xyXG4gICAgdGhpcy5fcHJldmlld0ltYWdlRWxlbWVudFRpdGxlID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgICAgIFwiLm1vZGFsX19wcmV2aWV3X3RpdGxlXCJcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICBvcGVuKGRhdGEpIHtcclxuICAgIHRoaXMuX3ByZXZpZXdJbWFnZUVsZW1lbnQuc3JjID0gZGF0YS5saW5rO1xyXG4gICAgdGhpcy5fcHJldmlld0ltYWdlRWxlbWVudC5hbHQgPSBkYXRhLm5hbWU7XHJcbiAgICB0aGlzLl9wcmV2aWV3SW1hZ2VFbGVtZW50VGl0bGUudGV4dENvbnRlbnQgPSBkYXRhLm5hbWU7XHJcbiAgICBzdXBlci5vcGVuKCk7XHJcbiAgfVxyXG59XHJcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFVzZXJJbmZvIHtcclxuICBjb25zdHJ1Y3RvcihuYW1lU2VsZWN0b3IsIGRlc2NyaXB0aW9uU2VsZWN0b3IsIGF2YXRhclNlbGVjdG9yKSB7XHJcbiAgICB0aGlzLl9kZXNjcmlwdGlvbkVsZW1lbnQgPSBkZXNjcmlwdGlvblNlbGVjdG9yO1xyXG4gICAgdGhpcy5fbmFtZUVsZW1lbnQgPSBuYW1lU2VsZWN0b3I7XHJcbiAgICB0aGlzLl9hdmF0YXJFbGVtZW50ID0gYXZhdGFyU2VsZWN0b3I7XHJcbiAgfVxyXG5cclxuICBnZXRVc2VySW5mbygpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIG5hbWU6IHRoaXMuX25hbWVFbGVtZW50LnRleHRDb250ZW50LFxyXG4gICAgICBkZXNjcmlwdGlvbjogdGhpcy5fZGVzY3JpcHRpb25FbGVtZW50LnRleHRDb250ZW50LFxyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIGdldFVzZXJBdmF0YXIoKSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBhdmF0YXI6IHRoaXMuX2F2YXRhckVsZW1lbnQuc3JjLFxyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIHNldFVzZXJJbmZvKHsgbmFtZSwgZGVzY3JpcHRpb24gfSkge1xyXG4gICAgdGhpcy5fbmFtZUVsZW1lbnQudGV4dENvbnRlbnQgPSBuYW1lO1xyXG4gICAgdGhpcy5fZGVzY3JpcHRpb25FbGVtZW50LnRleHRDb250ZW50ID0gZGVzY3JpcHRpb247XHJcbiAgfVxyXG5cclxuICBzZXRVc2VyQXZhdGFyKGF2YXRhcikge1xyXG4gICAgdGhpcy5fYXZhdGFyRWxlbWVudC5zcmMgPSBhdmF0YXI7XHJcbiAgfVxyXG59XHJcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIEFwaSB7XHJcbiAgY29uc3RydWN0b3IoeyB1cmwsIHRva2VuIH0pIHtcclxuICAgIHRoaXMuX3VybCA9IHVybDtcclxuICAgIHRoaXMuX3Rva2VuID0gdG9rZW47XHJcbiAgfVxyXG5cclxuICBjaGVja1Jlc3BvbnNlKHJlcykge1xyXG4gICAgaWYgKCFyZXMub2spIHtcclxuICAgICAgY29uc29sZS5sb2coXCJSZXNwb25zZSBOT1QgT0shXCIpO1xyXG4gICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYEVycm9yOiAke3Jlcy5zdGF0dXN9YCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBjb25zb2xlLmxvZyhcIlJlc3BvbnNlIE9LIVwiKTtcclxuICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBnZXRJbml0aWFsQ2FyZHMoKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fdXJsfS9jYXJkc2AsIHtcclxuICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgIGF1dGhvcml6YXRpb246IHRoaXMuX3Rva2VuLFxyXG4gICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxyXG4gICAgICB9LFxyXG4gICAgfSkudGhlbih0aGlzLmNoZWNrUmVzcG9uc2UpO1xyXG4gIH1cclxuXHJcbiAgLy8gb3RoZXIgbWV0aG9kcyBmb3Igd29ya2luZyB3aXRoIHRoZSBBUElcclxuXHJcbiAgLy9HRVQgdXNlcnMvbWVcclxuICBnZXRVc2VySW5mbygpIHtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl91cmx9L3VzZXJzL21lYCwge1xyXG4gICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgYXV0aG9yaXphdGlvbjogdGhpcy5fdG9rZW4sXHJcbiAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXHJcbiAgICAgIH0sXHJcbiAgICB9KS50aGVuKHRoaXMuY2hlY2tSZXNwb25zZSk7XHJcbiAgfVxyXG5cclxuICBnZXRJbmZvQW5kQ2FyZHMoKSB7XHJcbiAgICByZXR1cm4gUHJvbWlzZS5hbGwoW3RoaXMuZ2V0VXNlckluZm8oKSwgdGhpcy5nZXRJbml0aWFsQ2FyZHMoKV0pO1xyXG4gIH1cclxuXHJcbiAgdXBkYXRlVXNlckluZm8oeyBuYW1lLCBkZXNjcmlwdGlvbiB9KSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fdXJsfS91c2Vycy9tZWAsIHtcclxuICAgICAgbWV0aG9kOiBcIlBBVENIXCIsXHJcbiAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICBhdXRob3JpemF0aW9uOiB0aGlzLl90b2tlbixcclxuICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcclxuICAgICAgfSxcclxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoeyBuYW1lOiBuYW1lLCBhYm91dDogZGVzY3JpcHRpb24gfSksXHJcbiAgICB9KS50aGVuKHRoaXMuY2hlY2tSZXNwb25zZSk7XHJcbiAgfVxyXG5cclxuICBhZGRDYXJkKHsgbmFtZSwgbGluayB9KSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fdXJsfS9jYXJkc2AsIHtcclxuICAgICAgbWV0aG9kOiBcIlBPU1RcIixcclxuICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgIGF1dGhvcml6YXRpb246IHRoaXMuX3Rva2VuLFxyXG4gICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxyXG4gICAgICB9LFxyXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgICAgbmFtZTogbmFtZSxcclxuICAgICAgICBsaW5rOiBsaW5rLFxyXG4gICAgICB9KSxcclxuICAgIH0pLnRoZW4odGhpcy5jaGVja1Jlc3BvbnNlKTtcclxuICB9XHJcblxyXG4gIC8vbWV0aG9kIHRvIGRlbGV0ZSBjYXJkIGZyb20gc2VydmVyXHJcbiAgZGVsZXRlQ2FyZChjYXJkSWQpIHtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl91cmx9L2NhcmRzLyR7Y2FyZElkfWAsIHtcclxuICAgICAgbWV0aG9kOiBcIkRFTEVURVwiLFxyXG4gICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgYXV0aG9yaXphdGlvbjogdGhpcy5fdG9rZW4sXHJcbiAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXHJcbiAgICAgIH0sXHJcbiAgICB9KS50aGVuKHRoaXMuY2hlY2tSZXNwb25zZSk7XHJcbiAgfVxyXG5cclxuICBsaWtlQ2FyZFN0YXR1cyhjYXJkSWQsIGxpa2UpIHtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl91cmx9L2NhcmRzLyR7Y2FyZElkfS9saWtlc2AsIHtcclxuICAgICAgbWV0aG9kOiBsaWtlID8gXCJQVVRcIiA6IFwiREVMRVRFXCIsXHJcbiAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICBhdXRob3JpemF0aW9uOiB0aGlzLl90b2tlbixcclxuICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcclxuICAgICAgfSxcclxuICAgIH0pLnRoZW4odGhpcy5jaGVja1Jlc3BvbnNlKTtcclxuICB9XHJcblxyXG4gIGNoYW5nZUF2YXRhcihsaW5rKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fdXJsfS91c2Vycy9tZS9hdmF0YXJgLCB7XHJcbiAgICAgIG1ldGhvZDogXCJQQVRDSFwiLFxyXG4gICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgYXV0aG9yaXphdGlvbjogdGhpcy5fdG9rZW4sXHJcbiAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXHJcbiAgICAgIH0sXHJcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsgYXZhdGFyOiBsaW5rIH0pLFxyXG4gICAgfSkudGhlbih0aGlzLmNoZWNrUmVzcG9uc2UpO1xyXG4gIH1cclxufVxyXG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBTZWN0aW9uIHtcclxuICBjb25zdHJ1Y3Rvcih7IHJlbmRlcmVyIH0sIGNsYXNzU2VsZWN0b3IpIHtcclxuICAgIHRoaXMuX2l0ZW1zID0gW107XHJcbiAgICB0aGlzLl9yZW5kZXJlciA9IHJlbmRlcmVyO1xyXG4gICAgdGhpcy5fY29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihjbGFzc1NlbGVjdG9yKTtcclxuICB9XHJcblxyXG4gIHJlbmRlckl0ZW1zKGl0ZW1zKSB7XHJcbiAgICB0aGlzLl9pdGVtcyA9IGl0ZW1zO1xyXG4gICAgdGhpcy5faXRlbXMuZm9yRWFjaCgoaXRlbSkgPT4gdGhpcy5fcmVuZGVyZXIoaXRlbSkpO1xyXG4gIH1cclxuXHJcbiAgYWRkSXRlbShlbGVtZW50KSB7XHJcbiAgICB0aGlzLl9jb250YWluZXIuYXBwZW5kKGVsZW1lbnQpO1xyXG4gIH1cclxufVxyXG4iXSwibmFtZXMiOlsiY29uc3RydWN0b3IiLCJfcmVmIiwiY2FyZFNlbGVjdG9yIiwiZGF0YSIsImhhbmRsZUltYWdlQ2xpY2siLCJoYW5kbGVMaWtlQ2xpY2siLCJoYW5kbGVEZWxldGVDYXJkQ2xpY2siLCJ0aGlzIiwiX25hbWUiLCJuYW1lIiwiX2xpbmsiLCJsaW5rIiwiX2lkIiwiX2lzTGlrZWQiLCJpc0xpa2VkIiwiX2NhcmRTZWxlY3RvciIsIl9oYW5kbGVJbWFnZUNsaWNrIiwiX2hhbmRsZUxpa2VDbGljayIsIl9oYW5kbGVEZWxldGVDYXJkQ2xpY2siLCJfZ2V0VGVtcGxhdGUiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJjb250ZW50IiwiY2xvbmVOb2RlIiwiZ2V0SWQiLCJfc2V0RXZlbnRMaXN0ZW5lcnMiLCJfbGlrZUJ1dHRvbiIsImFkZEV2ZW50TGlzdGVuZXIiLCJfY2FyZERlbGV0ZSIsIl9jYXJkSW1hZ2UiLCJfaGFuZGxlTGlrZUJ1dHRvbiIsImNsYXNzTGlzdCIsImFkZCIsInJlbW92ZSIsImhhbmRsZUxpa2UiLCJoYW5kbGVEZWxldGVDYXJkIiwiX2NhcmRFbGVtZW50IiwiZ2V0VmlldyIsIl9jYXJkQnV0dG9uIiwidGV4dENvbnRlbnQiLCJzcmMiLCJhbHQiLCJzZXR0aW5ncyIsImZvcm1FbGVtZW50IiwiX2lucHV0U2VsZWN0b3IiLCJpbnB1dFNlbGVjdG9yIiwiX3N1Ym1pdEJ1dHRvblNlbGVjdG9yIiwic3VibWl0QnV0dG9uU2VsZWN0b3IiLCJfaW5hY3RpdmVCdXR0b25DbGFzcyIsImluYWN0aXZlQnV0dG9uQ2xhc3MiLCJfaW5wdXRFcnJvckNsYXNzIiwiaW5wdXRFcnJvckNsYXNzIiwiX2Vycm9yQ2xhc3MiLCJlcnJvckNsYXNzIiwiX2Zvcm0iLCJfc2hvd0lucHV0RXJyb3IiLCJpbnB1dEVsIiwiX2Vycm9yTWVzc2FnZUVsIiwiaWQiLCJ2YWxpZGF0aW9uTWVzc2FnZSIsIl9oaWRlSW5wdXRFcnJvciIsIl9pbnB1dExpc3QiLCJBcnJheSIsImZyb20iLCJxdWVyeVNlbGVjdG9yQWxsIiwiX2J1dHRvbkVsZW1lbnQiLCJmb3JFYWNoIiwiX2NoZWNrSW5wdXRWYWxpZGl0eSIsInRvZ2dsZUJ1dHRvblN0YXRlIiwiZGlzYWJsZWRCdXR0b24iLCJkaXNhYmxlZCIsImVuYWJsZWRCdXR0b24iLCJfaGFzSW52YWxpZElucHV0IiwiZXZlcnkiLCJ2YWxpZGl0eSIsInZhbGlkIiwicmVzZXRWYWxpZGF0aW9uIiwiZW5hYmxlVmFsaWRhdGlvbiIsImV2dCIsInByZXZlbnREZWZhdWx0IiwiUG9wdXAiLCJwb3B1cFNlbGVjdG9yIiwiX3BvcHVwRWxlbWVudCIsIl9jbG9zZUJ1dHRvbiIsIl9oYW5kbGVFc2NDbG9zZSIsImJpbmQiLCJvcGVuIiwiY2xvc2UiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwia2V5Iiwic2V0RXZlbnRMaXN0ZW5lcnMiLCJ0YXJnZXQiLCJQb3B1cFdpdGhGb3JtIiwiaGFuZGxlRm9ybVN1Ym1pdCIsInN1cGVyIiwiX2hhbmRsZUZvcm1TdWJtaXQiLCJfc2F2ZUJ1dHRvbiIsIl9zYXZlQnV0dG9uVGV4dCIsInNldFN1Ym1pdEhhbmRsZXIiLCJfZ2V0SW5wdXRWYWx1ZXMiLCJfaW5wdXREYXRhIiwiaW5wdXQiLCJ2YWx1ZSIsIm1vZGFsU2F2aW5nIiwiaXNTYXZpbmciLCJzYXZlVGV4dCIsImFyZ3VtZW50cyIsImxlbmd0aCIsInVuZGVmaW5lZCIsImZvcm1WYWx1ZXMiLCJyZXNldCIsInByb2ZpbGVFZGl0TW9kYWwiLCJhZGRDYXJkRm9ybSIsImZvcm1zIiwicHJvZmlsZUVkaXRCdG4iLCJwcm9maWxlTmFtZSIsInByb2ZpbGVEZXNjcmlwdGlvbiIsImFkZE5ld0NhcmRCdXR0b24iLCJhdmF0YXJDaGFuZ2VCdG4iLCJhdmF0YXJJbWFnZSIsInByb2ZpbGVOYW1lSW5wdXQiLCJwcm9maWxlRGVzY3JpcHRpb25JbnB1dCIsImNhcmRTZWxlY3RvcnMiLCJwb3B1cFdpdGhJbWFnZSIsIl9wcmV2aWV3SW1hZ2VFbGVtZW50IiwiX3ByZXZpZXdJbWFnZUVsZW1lbnRUaXRsZSIsIm5ld0NhcmRQb3B1cCIsImlucHV0RGF0YSIsImNhcmREYXRhIiwidGl0bGUiLCJ1cmwiLCJhcGkiLCJhZGRDYXJkIiwidGhlbiIsInJlcyIsInJlbmRlckNhcmQiLCJjYXRjaCIsImVyciIsImNvbnNvbGUiLCJlcnJvciIsImZpbmFsbHkiLCJlZGl0UHJvZmlsZVBvcHVwIiwidXNlckRhdGEiLCJkZXNjcmlwdGlvbiIsInVwZGF0ZVVzZXJJbmZvIiwidXNlckluZm8iLCJzZXRVc2VySW5mbyIsImF2YXRhckNoYW5nZVBvcHVwIiwiYXZhdGFyVXJsIiwiY2hhbmdlQXZhdGFyIiwic2V0VXNlckF2YXRhciIsImF2YXRhciIsImNvbmZpcm1EZWxldGVQb3B1cCIsImhhbmRsZURlbGV0ZUNhcmRTdWJtaXQiLCJuYW1lU2VsZWN0b3IiLCJkZXNjcmlwdGlvblNlbGVjdG9yIiwiYXZhdGFyU2VsZWN0b3IiLCJfZGVzY3JpcHRpb25FbGVtZW50IiwiX25hbWVFbGVtZW50IiwiX2F2YXRhckVsZW1lbnQiLCJnZXRVc2VySW5mbyIsImdldFVzZXJBdmF0YXIiLCJ0b2tlbiIsIl91cmwiLCJfdG9rZW4iLCJjaGVja1Jlc3BvbnNlIiwib2siLCJsb2ciLCJqc29uIiwiUHJvbWlzZSIsInJlamVjdCIsInN0YXR1cyIsImdldEluaXRpYWxDYXJkcyIsImZldGNoIiwiaGVhZGVycyIsImF1dGhvcml6YXRpb24iLCJnZXRJbmZvQW5kQ2FyZHMiLCJhbGwiLCJfcmVmMiIsIm1ldGhvZCIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwiYWJvdXQiLCJfcmVmMyIsImRlbGV0ZUNhcmQiLCJjYXJkSWQiLCJsaWtlQ2FyZFN0YXR1cyIsImxpa2UiLCJjYXJkcyIsImNhcmRTZWN0aW9uIiwicmVuZGVySXRlbXMiLCJjbGFzc1NlbGVjdG9yIiwicmVuZGVyZXIiLCJfaXRlbXMiLCJfcmVuZGVyZXIiLCJfY29udGFpbmVyIiwiaXRlbXMiLCJpdGVtIiwiYWRkSXRlbSIsImVsZW1lbnQiLCJhcHBlbmQiLCJjYXJkIiwiQ2FyZCIsImZvcm1WYWxpZGF0b3JzIiwidmFsaWRhdG9yIiwiRm9ybVZhbGlkYXRvciIsImZvcm1OYW1lIiwiZ2V0QXR0cmlidXRlIl0sInNvdXJjZVJvb3QiOiIifQ==