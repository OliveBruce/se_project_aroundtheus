!function(){"use strict";var e=class{constructor(e,t,s){let{name:n,link:r}=e;this._name=n,this._link=r,this._cardSelector=t,this._handleImageClick=s}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}_setEventListeners(){this._cardButton.addEventListener("click",(()=>{this._handleLikeButton()})),this._cardDelete.addEventListener("click",(()=>{this._handleDeleteCard()})),this._cardImage.addEventListener("click",(()=>{this._handleImageClick({name:this._name,link:this._link})}))}_handleLikeButton(){this._cardButton.classList.toggle("card__button_active")}_handleDeleteCard(){this._cardElement.remove(),this._cardElement=null}getView(){return this._cardElement=this._getTemplate(),this._cardImage=this._cardElement.querySelector(".card__image"),this._cardButton=this._cardElement.querySelector(".card__button"),this._cardDelete=this._cardElement.querySelector(".card__delete_button"),this._cardElement.querySelector(".card__title").textContent=this._name,this._cardImage.src=this._link,this._cardImage.alt=this._name,this._setEventListeners(),this._cardElement}},t=class{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t}_showInputError(e){this._errorMessageEl=this._form.querySelector(`#${e.id}-error`),e.classList.add(this._inputErrorClass),this._errorMessageEl.textContent=e.validationMessage,this._errorMessageEl.classList.add(this._errorClass)}_hideInputError(e){this._errorMessageEl=this._form.querySelector(`#${e.id}-error`),e.classList.remove(this._inputErrorClass),this._errorMessageEl.classList.remove(this._errorClass),this._errorMessageEl.textContent=""}_setEventListeners(){this._inputList=Array.from(this._form.querySelectorAll(this._inputSelector)),this._buttonElement=this._form.querySelector(this._submitButtonSelector),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this.toggleButtonState()}))}))}disabledButton(){this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0}enabledButton(){this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1}_hasInvalidInput(){return!this._inputList.every((e=>e.validity.valid))}toggleButtonState(){this._hasInvalidInput()?this.disabledButton():this.enabledButton()}resetValidation(){this._inputList.forEach((e=>{this._hideInputError(e)})),this.toggleButtonState()}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}};class s{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._closeButton=this._popupElement.querySelector(".modal__close"),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._closeButton.addEventListener("click",(()=>{this.close()})),this._popupElement.addEventListener("click",(e=>{e.target===this._popupElement&&this.close()}))}}class n extends s{constructor(e,t){let{popupSelector:s}=e;super({popupSelector:s}),this._handleFormSubmit=t,this._form=this._popupElement.querySelector(".modal__form"),this._inputList=this._form.querySelectorAll(".modal__input")}_getInputValues(){return this._inputData={},this._inputList.forEach((e=>{this._inputData[e.name]=e.value})),this._inputData}setEventListeners(){this._form.addEventListener("submit",(e=>{e.preventDefault();const t=this._getInputValues();this._handleFormSubmit(t),this._form.reset()})),super.setEventListeners()}}const r={inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error"},i=(document.querySelector(".gallery__cards"),document.querySelector("#profile-edit-modal")),o=(document.forms["profile-edit-form"],document.querySelector("#add-card-modal"),document.forms["add-card-form"]),a=document.querySelector("#profile-edit-button"),l=document.querySelector(".profile__name-text"),c=document.querySelector(".profile__description"),u=document.querySelector("#profile-add-button"),d=i.querySelector("#owner-name"),_=i.querySelector("#owner-description"),m=new class{constructor(e,t){let{items:s,renderer:n}=e;this._items=s,this._renderer=n,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>this._renderer(e)))}addItem(e){this._container.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:h},".gallery__cards");function h(t){const s=new e(t,"#card-template",p).getView();m.addItem(s)}function p(e){v.open(e)}m.renderItems();const E=new class{constructor(e,t){this._descriptionElement=t,this._nameElement=e}getUserInfo(){return{name:this._nameElement.textContent,description:this._descriptionElement.textContent}}setUserInfo(e,t){this._nameElement.textContent=e,this._descriptionElement.textContent=t}}(l,c);a.addEventListener("click",(()=>{const e=E.getUserInfo();d.value=e.name,_.value=e.description,f.open()})),u.addEventListener("click",(()=>{S.open(),g["add-form"].toggleButtonState()}));const g={};[...document.querySelectorAll(".modal__form")].forEach((e=>{const s=new t(r,e),n=e.getAttribute("name");g[n]=s,s.enableValidation()}));const v=new class extends s{constructor(e){let{popupSelector:t}=e;super({popupSelector:t}),this._previewImageElement=this._popupElement.querySelector(".modal__preview_image"),this._previewImageElementTitle=this._popupElement.querySelector(".modal__preview_title")}open(e){this._previewImageElement.src=e.link,this._previewImageElement.alt=e.name,this._previewImageElementTitle.textContent=e.name,super.open()}}({popupSelector:"#image-preview-modal"});v.setEventListeners();const S=new n({popupSelector:"#add-card-modal"},(function(e){h({name:e.title,link:e.url}),S.close(),o.reset()}));S.setEventListeners();const f=new n({popupSelector:"#profile-edit-modal"},(function(e){const t=e.name,s=e.description;E.setUserInfo(t,s),f.close()}));f.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,